// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @unique @default(uuid())
  slug        String     @unique
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  nickName    String?    @unique
  description String?
  avatarUrl   String?
  reviews     Review[]
  favorites   Favorite[]
  Factory     Factory[]
}

model Factory {
  id             String           @unique @default(uuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String
  title          String
  description    String
  zipcode        String
  prefecture     Prefecture?      @relation(fields: [prefectureSlug], references: [slug])
  prefectureSlug String?
  city           String
  addressDetail  String
  lat            Float
  lng            Float
  tel            String?
  businessHours  String?
  holidays       String?
  siteUrl        String?
  imageUrl       String[]         @default([])
  reviews        Review[]
  favoritedBy    Favorite[]
  genres         FactoryGenre[]
  features       FactoryFeature[]
  userId         String
  user           User             @relation(fields: [userId], references: [id])
}

model Prefecture {
  id      String    @unique @default(uuid())
  name    String    @unique
  slug    String    @unique
  factory Factory[]
}

model Genre {
  id        String         @unique @default(uuid())
  name      String // ジャンル名
  slug      String?        @unique
  factories FactoryGenre[]
}

model Feature {
  id        String           @unique @default(uuid())
  name      String // バリアフリーの特徴名
  slug      String?          @unique
  factories FactoryFeature[]
}

// 中間テーブル
model FactoryGenre {
  genreId   String
  genre     Genre   @relation(fields: [genreId], references: [id], onDelete: Cascade)
  factoryId String
  factory   Factory @relation(fields: [factoryId], references: [id], onDelete: Cascade)

  @@id([genreId, factoryId])
}

// 中間テーブル
model FactoryFeature {
  featureId String
  feature   Feature @relation(fields: [featureId], references: [id], onDelete: Cascade)
  factoryId String
  factory   Factory @relation(fields: [factoryId], references: [id], onDelete: Cascade)

  @@id([featureId, factoryId])
}

model Favorite {
  userId    String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  factoryId String
  factory   Factory @relation(fields: [factoryId], references: [id], onDelete: Cascade)

  @@id([userId, factoryId])
}

model Review {
  id        String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  comment   String
  userId    String
  imageUrl  String[] @default([])
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  factoryId String
  factory   Factory  @relation(fields: [factoryId], references: [id])

  @@unique([userId, factoryId], name: "userId_factoryId")
}
